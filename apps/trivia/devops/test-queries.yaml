# Copyright 2024 The Drasi Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ContinuousQuery
apiVersion: v1
name: test-1
spec:
  mode: query
  sources:    
    subscriptions:
      - id: games
  query: >
      MATCH
          (a:Answer)-[:ANSWER_FROM]->(p:Player)-[:MEMBER_OF]->(t:Team)
      WITH
          p.name AS PlayerName,
          t.name AS TeamName,
          max(datetime({ epochMillis: a.time })) AS InactiveSince
      WHERE
          InactiveSince <= (datetime.realtime() - duration({ seconds: 30 }))
      OR
          drasi.trueLater(InactiveSince <= datetime.realtime() - duration({ seconds: 30 }), InactiveSince + duration({ seconds: 30 }))
      RETURN
          PlayerName,
          TeamName,
          InactiveSince,
          datetime.realtime() AS CurrentTime,
          datetime.realtime() - duration({ seconds: 30 }) AS Epoch,
          InactiveSince + duration({ seconds: 30 }) AS FutureEpoch