# Copyright 2024 The Drasi Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: setup-db-schema
data:
  01-create-tables.sql: |
    -- Create Building table
    CREATE TABLE "Building" (
        id VARCHAR(50) PRIMARY KEY,
        name VARCHAR(100) NOT NULL
    );

    -- Create Floor table
    CREATE TABLE "Floor" (
        id VARCHAR(50) PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        building_id VARCHAR(50) NOT NULL
    );

    -- Create Room table
    CREATE TABLE "Room" (
        id VARCHAR(50) PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        temperature INT NOT NULL,
        humidity INT NOT NULL,
        co2 INT NOT NULL,
        floor_id VARCHAR(50) NOT NULL
    );
  02-add-constraints.sql: |
    -- Add foreign key constraint to Floor table
    ALTER TABLE "Floor"
    ADD CONSTRAINT fk_building
    FOREIGN KEY (building_id) REFERENCES "Building"(id);

    -- Add foreign key constraint to Room table
    ALTER TABLE "Room"
    ADD CONSTRAINT fk_floor
    FOREIGN KEY (floor_id) REFERENCES "Floor"(id);
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: building-comfort-db
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          args: ["-c", "wal_level=logical"]
          volumeMounts:
          - name: init
            mountPath: "/docker-entrypoint-initdb.d"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
      volumes:
        - name: init
          configMap:
            name: setup-db-schema
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
   app: postgres